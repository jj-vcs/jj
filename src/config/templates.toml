[templates]
commit_summary = '''
separate(" ",
  format_short_commit_id(commit_id),
  if(description, description.first_line(), description_placeholder),
)
'''

log = '''
label(if(current_working_copy, "working_copy"),
  concat(
    separate(" ",
      if(divergent,
        label("divergent", format_short_change_id(change_id) "??"),
        format_short_change_id(change_id)),
      format_short_signature(author),
      format_timestamp(committer.timestamp()),
      branches,
      tags,
      working_copies,
      git_head,
      format_short_commit_id(commit_id),
      if(conflict, label("conflict", "conflict")),
    ) "\n",
    separate(" ",
      if(empty, label("empty", "(empty)")),
      if(description, description.first_line(), description_placeholder),
    ) "\n",
  ),
)
'''

op_log = '''
label(if(current_operation, "current_operation"),
  concat(
    separate(" ",
      id.short(),
      user,
      format_time_range(time),
    ) "\n",
    description.first_line() "\n",
    tags,
  ),
)
'''

# Defined as alias to allow 'log -T show'
show = 'show'

[template-aliases]
'description_placeholder' = 'label("description", "(no description set)")'

# Hook points for users to customize the default templates:
'format_short_id(id)' = 'id.shortest(12)'
'format_short_change_id(id)' = 'format_short_id(id)'
'format_short_commit_id(id)' = 'format_short_id(id)'
'format_short_signature(signature)' = 'signature.email()'
'format_time_range(time_range)' = '''
  time_range.start().ago() label("time", ", lasted ") time_range.duration()'''
'format_timestamp(timestamp)' = 'timestamp'

# TODO: Add branches, tags, etc
# TODO: Indent the description like Git does
'show' = '''
concat(
  "Commit ID: " commit_id "\n",
  "Change ID: " change_id "\n",
  "Author: " author " (" format_timestamp(author.timestamp()) ")\n",
  "Committer: " committer " (" format_timestamp(committer.timestamp()) ")\n",
  "\n",
  if(description, description, description_placeholder "\n"),
  "\n",
)
'''
